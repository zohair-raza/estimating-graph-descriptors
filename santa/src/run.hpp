#ifndef TRIANGLE_DIST_RUN_HPP
#define TRIANGLE_DIST_RUN_HPP

#include "base_struct.hpp"
#include "source.hpp"
#include "worker.hpp"
#include <vector>
#include <iostream>
#include <unordered_map>
#include <sys/time.h>
#include <fstream>
#include <sstream>
#include <iomanip>
#include <cmath>

#include <sys/types.h>
#include <dirent.h>
#include <sys/stat.h>
#include <limits>

/*
#define DESC_SIZE 64
const long double arrayOfTs[DESC_SIZE] = {0.01,
 0.01037225095407057,
 0.010758358985421785,
 0.011158839925077485,
 0.011574228805920572,
 0.012005080577484074,
 0.012451970847350332,
 0.01291549665014884,
 0.013396277245180156,
 0.013894954943731374,
 0.014412195967188533,
 0.014948691337092337,
 0.015505157798326246,
 0.016082338776670414,
 0.016681005372000592,
 0.017301957388458945,
 0.017946024402973163,
 0.018614066873551213,
 0.019306977288832496,
 0.020025681360431178,
 0.02077113925966455,
 0.021544346900318832,
 0.022346337269165947,
 0.023178181806008922,
 0.02404099183509972,
 0.024935920049841583,
 0.02586416205275968,
 0.02682695795279726,
 0.027825594022071243,
 0.028861404414300882,
 0.029935772947204904,
 0.031050134951248604,
 0.032205979187210826,
 0.03340484983513244,
 0.034648348557303664,
 0.03593813663804628,
 0.0372759372031494,
 0.0386635375219241,
 0.04010279139495208,
 0.04159562163071847,
 0.04314402261443781,
 0.04475006297250449,
 0.046415888336127774,
 0.04814372420784346,
 0.04993587893473147,
 0.0517947467923121,
 0.05372281118324031,
 0.05572264795507174,
 0.05779692884153313,
 0.05994842503189409,
 0.06218001087320915,
 0.06449466771037624,
 0.06689548786914143,
 0.06938567878737184,
 0.07196856730011521,
 0.0746476040841712,
 0.0774263682681127,
 0.08030857221391513,
 0.08329806647658264,
 0.08639884494839685,
 0.08961505019466046,
 0.0929509789880649,
 0.09641108804907501,
 0.1};
 */

#define DESC_SIZE 60
const long double arrayOfTs[DESC_SIZE] = {
	0.001     , 0.00112421, 0.00126385, 0.00142083, 0.00159731,
       0.00179571, 0.00201876, 0.00226951, 0.00255141, 0.00286832,
       0.00322459, 0.00362512, 0.00407539, 0.0045816 , 0.00515068,
       0.00579044, 0.00650968, 0.00731824, 0.00822724, 0.00924915,
       0.01039798, 0.01168952, 0.01314147, 0.01477378, 0.01660883,
       0.01867181, 0.02099104, 0.02359833, 0.02652948, 0.02982471,
       0.03352924, 0.03769391, 0.04237587, 0.04763938, 0.05355667,
       0.06020894, 0.0676875 , 0.07609497, 0.08554673, 0.09617249,
       0.10811808, 0.12154743, 0.13664483, 0.15361749, 0.17269833,
       0.19414919, 0.21826447, 0.24537511, 0.27585316, 0.31011689,
       0.34863652, 0.39194068, 0.44062364, 0.49535352, 0.5568814 ,
       0.62605166, 0.70381356, 0.79123426, 0.8895135 , 1.0};

// run actual mpi implementation
void run_mpi(const char* filename, MPIIO &hIO, int workerNum, int memSize, int lenBuf, unsigned int seed, std::vector<long double > * kerns, double &srcCompCost, double &workerCompCostMax, double &workerCompCostSum);

// run experiment with mpi
void run_exp (const char* input, const char* outPath, MPIIO &hIO, int workerNum, int memSize, int repeat, int bufLen=1000);

void print_cnt(const char* outPath, const std::vector<long double> * kerns, int id, int type);

#endif //TRIANGLE_DIST_RUN_HPP
